trigger:
- main

variables: 
  solutionDir: src

pool:
  name: WindowsAgentPool
  vmImage: winagent

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - script: dotnet build ChatApplication.API
      displayName: Building API Project
      workingDirectory: $(solutionDir)

    - script: dotnet build ChatApplication.Blazor
      displayName: Building Blazor Project
      workingDirectory: $(solutionDir)

    - script: dotnet publish ChatApplication.API -o $(build.artifactStagingDirectory)
      displayName: Publishing API project build to the artifact
      workingDirectory: $(solutionDir)
    

    - task: PublishPipelineArtifact@1
      displayName: Publish the build artifact to the pipeline
      inputs:
        targetPath: '$(build.artifactStagingDirectory)'
        artifact: apiProject
        publishLocation: 'pipeline'

- stage: Deploy
  jobs:
   - job: Deploy_Database
     steps:
      
   - job: Deploy_API
     steps:
     - task: DownloadPipelineArtifact@2
       inputs:
         buildType: 'current'
         artifactName: 'apiProject'
         targetPath: '$(Pipeline.Workspace)/apiproject'

     - task: ArchiveFiles@2
       inputs:
         rootFolderOrFile: '$(Pipeline.Workspace)/apiproject/'
         includeRootFolder: false
         archiveType: 'zip'
         archiveFile: '$(Pipeline.Workspace)/PublishedApp.zip'
         replaceExistingArchive: true

     - task: AzureWebApp@1
       inputs:
        azureSubscription: 'Default Service Connection'
        appType: 'webApp'
        appName: 'ChatApplication-API'
        package: '$(Pipeline.Workspace)/PublishedApp.zip'
        deploymentMethod: 'auto'
      